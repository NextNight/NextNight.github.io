<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kala</title>
  
  <subtitle>Do Best Kala</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nextnight.github.io/"/>
  <updated>2018-08-01T02:48:48.317Z</updated>
  <id>http://nextnight.github.io/</id>
  
  <author>
    <name>Best Kala</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>algorithm-array</title>
    <link href="http://nextnight.github.io/2018/07/31/algorithm-array/"/>
    <id>http://nextnight.github.io/2018/07/31/algorithm-array/</id>
    <published>2018-07-31T15:21:37.000Z</published>
    <updated>2018-08-01T02:48:48.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="整数求和"><a class="markdownIt-Anchor" href="#整数求和"></a> 整数求和</h1><p>Q: 给一个非负整数，求每一位的数字加和，得到之后的数字在把每一位进行加和，直到结果为一位数<br>E: 比如：83-&gt;8+3=11-&gt;1+1=2,输出2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a_num_sum</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Q: 给一个非负整数，求每一位的数字加和，得到之后的数字在把每一位进行加和，直到结果为一位数</span></span><br><span class="line"><span class="string">    E: 比如：83-&gt;8+3=11-&gt;1+1=2,输出2</span></span><br><span class="line"><span class="string">    case: 尾递归，进入下一层不再需要上一层的环境，因为这个递归完成后不再需要干其他的事，所以直接return这个递归，就会得到最内层的结果</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 如果要输出每次计算的值</span></span><br><span class="line">    <span class="comment"># print(num)   # 83 11 2</span></span><br><span class="line">    <span class="comment"># if num &gt;= 10:</span></span><br><span class="line">    <span class="comment">#     a_num_sum(sum([int(i) for i in list(str(num))]))</span></span><br><span class="line">    <span class="comment"># print(num)  # 2,11,83</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    <span class="keyword">if</span> num &gt;= <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span> a_num_sum(sum([int(i) <span class="keyword">for</span> i <span class="keyword">in</span> list(str(num))]))</span><br></pre></td></tr></table></figure><h1 id="两数之和等于目标值"><a class="markdownIt-Anchor" href="#两数之和等于目标值"></a> 两数之和等于目标值</h1><p>Q:给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。<br>E:[2,7,3,11] tag:9<br>R:[0,1]<br>E:[3,3] tag:6<br>R:[0,1]</p><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">def two_sum(dt, <span class="meta">tag</span>):</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Q:给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</span></span><br><span class="line"><span class="string">    E:[2,7,3,11] tag:9</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    # for i, item <span class="keyword">in</span> enumerate(dt):</span><br><span class="line">    #     <span class="keyword">if</span> (<span class="meta">tag</span> - item) <span class="keyword">in</span> dt <span class="keyword">and</span> dt.index(<span class="meta">tag</span> - item)!=i:</span><br><span class="line">    #         <span class="keyword">return</span> [i, dt.index(<span class="meta">tag</span> - item)]</span><br><span class="line">    # 基础暴力解法</span><br><span class="line">    for i,it <span class="keyword">in</span> enumerate(dt):</span><br><span class="line">        for j,jt <span class="keyword">in</span> enumerate(dt):</span><br><span class="line">            <span class="keyword">if</span> it+jt==<span class="meta">tag</span> <span class="keyword">and</span> i!=j:</span><br><span class="line">                <span class="keyword">return</span> [i,j]</span><br><span class="line">    # hashmap，dict解法</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;整数求和&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#整数求和&quot;&gt;&lt;/a&gt; 整数求和&lt;/h1&gt;
&lt;p&gt;Q: 给一个非负整数，求每一位的数字加和，得到之后的数字在把每一位进行加和，直到结果为一位数&lt;br&gt;
E: 比如：83-&amp;gt;8+
      
    
    </summary>
    
      <category term="algorithm" scheme="http://nextnight.github.io/categories/algorithm/"/>
    
    
      <category term="array" scheme="http://nextnight.github.io/tags/array/"/>
    
      <category term="string" scheme="http://nextnight.github.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>不忘初心</title>
    <link href="http://nextnight.github.io/2018/07/30/%E4%B8%8D%E5%BF%98%E5%88%9D%E5%BF%83/"/>
    <id>http://nextnight.github.io/2018/07/30/不忘初心/</id>
    <published>2018-07-30T14:16:33.000Z</published>
    <updated>2018-08-01T02:47:48.849Z</updated>
    
    <content type="html"><![CDATA[<p>不忘初心，方得始终<br>初心易守，始终难得</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不忘初心，方得始终&lt;br&gt;
初心易守，始终难得&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
